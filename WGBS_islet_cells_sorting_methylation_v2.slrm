#!/bin/bash
#SBATCH --mail-user=verda.e.agan@vanderbilt.edu
#SBATCH --mail-type=ALL
#SBATCH --nodes=1
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=8
#SBATCH --time=24:00:00
#SBATCH --mem=64G
#SBATCH --output=sorting_methylation_alpha_beta-%j.out
#SBATCH --error=sorting_methylation_alpha_beta-%j.error
#SBATCH --job-name=sorting_methylation_alpha_beta-%j

#filename=$1 --> Alpha_WGBS_rep1_S3
#filename=$1 --> Beta_WGBS_rep1_S2

"daba daba doo"

##Necessary to set this for proper sorting##
##LC_ALL is the environment variable that overrides all the other localisation settings##
export LC_ALL=C

##Load modules##
##'Tools' contains a collection of modules needed to run methpipe
module restore tools

##Set variables and paths##
VEA='/data/hodges_lab/aganve/data/DNA_Methylation'
GEN='/data/hodges_lab/hg38_genome/chroms' #contains FASTA format files for each chromosome (.fa)
SIZES='/data/hodges_lab/hg38_genome/hg38.chrom.sizes'

##Echo variables to keep track in .out or .err files##
date
pwd

# ##Sort mapped reads according to their reference sequence position##
# ##Reads are sorted by chrom, start, end, strand##
# ##Sorting takes the whole .mr file into RAM, sorts it into a new file, and spits it out. Beta .mr is 115 GB; alpha .mr is 60 GB##
# ##May need twice 115GB, so 230GB. Max is 264GB##
# ##Submit each sort command individually with plenty of RAM##
# ##Sorting beta required 157 GB and 37'; alpha 96 GB and 23'##
echo "sorting"
sort -k 1,1 -k 2,2n -k 3,3n -k 6,6 -o ${VEA}/3_mapped_reads/Alpha_WGBS_rep1_S3.mr.sorted_start ${VEA}/3_mapped_reads/Alpha_WGBS_rep1_S3.mr
sort -k 1,1 -k 2,2n -k 3,3n -k 6,6 -o ${VEA}/3_mapped_reads/Beta_WGBS_rep1_S2.mr.sorted_start ${VEA}/3_mapped_reads/Beta_WGBS_rep1_S2.mr
echo "sorting complete"

# ##Remove duplicate reads, or reads that were mapped to identical genomic locations (same chromosome, same start and end, and same strand)##
# ##The program duplicate-remover chooses a random one to be the representative of the original DNA sequence##
# ##Removing dups for beta required 8 MB and 22'; alpha 7 MB and 17'##
echo "remove dups"
duplicate-remover -S ${VEA}/3_mapped_reads/Alpha_WGBS_rep1_S3_dremove_stat.txt -o ${VEA}/3_mapped_reads/Alpha_WGBS_rep1_S3.mr.dremove ${VEA}/3_mapped_reads/Alpha_WGBS_rep1_S3.mr.sorted_start
duplicate-remover -S ${VEA}/3_mapped_reads/Beta_WGBS_rep1_S2_dremove_stat.txt -o ${VEA}/3_mapped_reads/Beta_WGBS_rep1_S2.mr.dremove ${VEA}/3_mapped_reads/Beta_WGBS_rep1_S2.mr.sorted_start
echo "finished removing dups"

# ##Estimating bisulfite conversion rate, defined as the rate at which unmethylated cytosines in the sample appear as Ts in the sequenced reads##
# ##Match the positions in reads that correspond to presumed unmethylated cytosines (non-CpG cytosines), then compute the ratio of T to (C + T) at these positions##
# ##If bisfulite reaction was perfect, then the T to (C+T) ratio should be very close to 1; if there is no bisulfite treatment, then this ratio should be close to 0##
echo "estimate bisulfite conversion"
bsrate -c ${GEN} -o ${VEA}/3_mapped_reads/Alpha_WGBS_rep1_S3.bsrate ${VEA}/3_mapped_reads/Alpha_WGBS_rep1_S3.mr.dremove
bsrate -c ${GEN} -o ${VEA}/3_mapped_reads/Beta_WGBS_rep1_S2.bsrate ${VEA}/3_mapped_reads/Beta_WGBS_rep1_S2.mr.dremove
echo "finished estimating bisulfite conversion"

# ##Computing single-site methylation levels##
# ##Methylation levels at each genomic cytosine are calculated, with the option to produce only levels for CpG-context cytosines##
echo "compute single-site methylation levels for all C's"
methcounts -c ${GEN} -o ${VEA}/4_meth_reads/Alpha_WGBS_rep1_S3.all.meth ${VEA}/3_mapped_reads/Alpha_WGBS_rep1_S3.mr.dremove
methcounts -c ${GEN} -o ${VEA}/4_meth_reads/Beta_WGBS_rep1_S2.all.meth ${VEA}/3_mapped_reads/Beta_WGBS_rep1_S2.mr.dremove
echo "finished computing single-site methylation levels for all C's"

# ##Create separate files with just methylation levels of CpG-context cytosines##
# ##This step is the same as using the symmetric-cpgs program##
grep CpG ${VEA}/4_meth_reads/Alpha_WGBS_rep1_S3.all.meth > ${VEA}/4_meth_reads/Alpha_WGBS_rep1_S3_CpG.meth
grep CpG ${VEA}/4_meth_reads/Beta_WGBS_rep1_S2.all.meth > ${VEA}/4_meth_reads/Beta_WGBS_rep1_S2.meth_CpG.meth

# ##Get methylation rate for only symmetric CpG context cytosines, where the CpG C is methylated on both strands##
# ##Each CpG pair generated by methcounts will be merged to one using the symmetric-cpgs program##
# ##'m' flag keeps mutated CpG sites##
echo "compute methylation rate for only symmetric CpG C's"
symmetric-cpgs -m -o ${VEA}/4_meth_reads/Alpha_WGBS_rep1_S3_CpG.meth ${VEA}/4_meth_reads/Alpha_WGBS_rep1_S3.all.meth
symmetric-cpgs -m -o ${VEA}/4_meth_reads/Beta_WGBS_rep1_S2_CpG.meth ${VEA}/4_meth_reads/Beta_WGBS_rep1_S2.all.meth
echo "finished computing methylation rate for only symmetric CpG C's"

# ##Computation of methylation level statistics for different context C's##
echo "compute methylation levels"
levels -o ${VEA}/4_meth_reads/Alpha_WGBS_rep1_S3.levels ${VEA}/4_meth_reads/Alpha_WGBS_rep1_S3.all.meth
levels -o ${VEA}/4_meth_reads/Beta_WGBS_rep1_S2.levels ${VEA}/4_meth_reads/Beta_WGBS_rep1_S2.all.meth
echo "finished computing methylation levels"

# ##Scan for hypomethylated regions (HMRs). This tool is geared primarily for WGBS data##
# ##Only considering methylation level at CpG sites, as the level of non-CpG methylation is not usually more than a few perfect##
# ##The hmr program uses a hidden Markov model (HMM) approach using a Beta-Binomial distribution to describe methylation levels at individual sites while accounting for the number of reads informing those levels##
# ##hmr automatically learns the average methylation levels inside and outside the HMRs, and also the average size of those HMRs##
# ##Output will be in a BED format##
echo "call hmrs"
hmr -p ${VEA}/5_hmrs/Alpha_WGBS_rep1_S3.hmr.params -o ${VEA}/5_hmrs/Alpha_WGBS_rep1_S3.hmr ${VEA}/4_meth_reads/Alpha_WGBS_rep1_S3_CpG.meth
hmr -p ${VEA}/5_hmrs/Beta_WGBS_rep1_S2.hmr.params -o ${VEA}/5_hmrs/Beta_WGBS_rep1_S2.hmr ${VEA}/4_meth_reads/Beta_WGBS_rep1_S2_CpG.meth
echo "finished calling hmrs"

# ##Generate epiread formate files for use in other downstream methpipe tools such as finding DMRs##
echo "generate epireads"
methstates -c ${GEN} -o ${VEA}/6_epireads/Alpha_WGBS_rep1_S3.epiread ${VEA}/3_mapped_reads/Alpha_WGBS_rep1_S3.mr.dremove
methstates -c ${GEN} -o ${VEA}/6_epireads/Beta_WGBS_rep1_S2.epiread ${VEA}/3_mapped_reads/Beta_WGBS_rep1_S2.mr.dremove
echo "finished generating epireads"

# ##DM analysis of alpha and beta WGBS data##
# methdiff -o ${VEA}/4_meth_reads/Alpha_Beta_WGBS.methdiff ${VEA}/4_meth_reads/Alpha_WGBS_rep1_S3.all.meth ${VEA}/4_meth_reads/Beta_WGBS_rep1_S2.all.meth

##Generate bigwig of symmetric CpG covering reads##
##bigWig format is needed to view the methylation level or read coverage at individual CpG sites in a genome browser##
awk '{OFS="\t"; print $1,$2,$2+1,$6}' < ${VEA}/4_meth_reads/Alpha_WGBS_rep1_S3_CpG.meth | wigToBigWig /dev/stdin ${SIZES} ${VEA}/7_tracks/Alpha_WGBS_rep1_S3_CpG.read.bw
awk '{OFS="\t"; print $1,$2,$2+1,$6}' < ${VEA}/4_meth_reads/Beta_WGBS_rep1_S2_CpG.meth | wigToBigWig /dev/stdin ${SIZES} ${VEA}/7_tracks/Beta_WGBS_rep1_S2_CpG.read.bw

##Generate bigwig of methylation levels for symmetric CpGs##
awk '{OFS="\t"; print $1,$2,$2+1,$5}' < ${VEA}/4_meth_reads/Alpha_WGBS_rep1_S3_CpG.meth | wigToBigWig /dev/stdin ${SIZES} ${VEA}/7_tracks/Alpha_WGBS_rep1_S3_CpG.meth.bw
awk '{OFS="\t"; print $1,$2,$2+1,$6}' < ${VEA}/4_meth_reads/Beta_WGBS_rep1_S2_CpG.meth | wigToBigWig /dev/stdin ${SIZES} ${VEA}/7_tracks/Beta_WGBS_rep1_S2_CpG.meth.bw

##Generate bigBed file of genomic intervals called as hypomethylated regions##
##Use bigBed files to create bigBed browser tracks for HMRs##
cut -f 1-3 ${VEA}/5_hmrs/Alpha_WGBS_rep1_S3.hmr > ${VEA}/7_tracks/Alpha_WGBS_rep1_S3.hmr.tmp
bedToBigBed ${VEA}/5_hmrs/Alpha_WGBS_rep1_S3.hmr.tmp ${SIZES} ${VEA}/7_tracks/Alpha_WGBS_rep1_S3.hmr.bb && rm ${VEA}/7_tracks/Alpha_WGBS_rep1_S3.hmr.tmp
cut -f 1-3 ${VEA}/5_hmrs/Beta_WGBS_rep1_S2.hmr > ${VEA}/7_tracks/Beta_WGBS_rep1_S2.hmr.tmp
bedToBigBed ${VEA}/5_hmrs/Beta_WGBS_rep1_S2.hmr ${SIZES} ${VEA}/7_tracks/Beta_WGBS_rep1_S2.hmr.bb && rm ${VEA}/7_tracks/Beta_WGBS_rep1_S2.hmr.tmp
